version: '3.8'

services:
  # üóÑÔ∏è Databases
  postgres:
    image: postgres:15-alpine
    container_name: connectverse-postgres
    environment:
      POSTGRES_DB: connectverse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - connectverse-network

  redis:
    image: redis:7-alpine
    container_name: connectverse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - connectverse-network

  mongodb:
    image: mongo:7
    container_name: connectverse-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: connectverse
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./infrastructure/docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - connectverse-network

  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: connectverse-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - connectverse-network

  # üìä Monitoring & Analytics
  prometheus:
    image: prom/prometheus:latest
    container_name: connectverse-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - connectverse-network

  grafana:
    image: grafana/grafana:latest
    container_name: connectverse-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - connectverse-network

  # üîç Search & Indexing
  kibana:
    image: kibana:8.11.0
    container_name: connectverse-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - connectverse-network

  # üìß Email Service
  mailhog:
    image: mailhog/mailhog:latest
    container_name: connectverse-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - connectverse-network

  # üîÑ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: connectverse-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - connectverse-network

  # üåê Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: connectverse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web-client
      - api-gateway
    networks:
      - connectverse-network

  # üåê Web Client (Next.js)
  web-client:
    build:
      context: .
      dockerfile: apps/web-client/Dockerfile
      target: development
    container_name: connectverse-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:admin@mongodb:27017/connectverse?authSource=admin
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - ./apps/web-client:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
      - mongodb
      - elasticsearch
      - rabbitmq
    networks:
      - connectverse-network

  # üîå API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
      target: development
    container_name: connectverse-api-gateway
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:admin@mongodb:27017/connectverse?authSource=admin
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - ./apps/api-gateway:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - mongodb
      - elasticsearch
      - rabbitmq
    networks:
      - connectverse-network

  # üë§ User Service
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
      target: development
    container_name: connectverse-user-service
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - connectverse-network

  # üìù Content Service
  content-service:
    build:
      context: .
      dockerfile: services/content-service/Dockerfile
      target: development
    container_name: connectverse-content-service
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - MONGODB_URL=mongodb://admin:admin@mongodb:27017/connectverse?authSource=admin
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - ./services/content-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - mongodb
      - redis
      - elasticsearch
      - rabbitmq
    networks:
      - connectverse-network

  # üí¨ Chat Service
  chat-service:
    build:
      context: .
      dockerfile: services/chat-service/Dockerfile
      target: development
    container_name: connectverse-chat-service
    ports:
      - "4003:4003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - MONGODB_URL=mongodb://admin:admin@mongodb:27017/connectverse?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - ./services/chat-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - mongodb
      - redis
      - rabbitmq
    networks:
      - connectverse-network

  # ü§ñ AI Service
  ai-service:
    build:
      context: .
      dockerfile: services/ai-service/Dockerfile
      target: development
    container_name: connectverse-ai-service
    ports:
      - "4004:4004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGING_FACE_API_KEY=${HUGGING_FACE_API_KEY}
    volumes:
      - ./services/ai-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - connectverse-network

  # üí∞ Payment Service
  payment-service:
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
      target: development
    container_name: connectverse-payment-service
    ports:
      - "4005:4005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
    volumes:
      - ./services/payment-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - connectverse-network

  # üîî Notification Service
  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
      target: development
    container_name: connectverse-notification-service
    ports:
      - "4006:4006"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/connectverse
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - mailhog
    networks:
      - connectverse-network

  # ‚öôÔ∏è Admin Panel
  admin-panel:
    build:
      context: .
      dockerfile: apps/admin-panel/Dockerfile
      target: development
    container_name: connectverse-admin-panel
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://api-gateway:4000
    volumes:
      - ./apps/admin-panel:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-gateway
    networks:
      - connectverse-network

# üì¶ Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  rabbitmq_data:
    driver: local

# üåê Networks
networks:
  connectverse-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16